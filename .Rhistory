gdp = NY.GDP.MKTP.KD.ZG,
uem = SL.UEM.TOTL.ZS
) |>
dplyr::mutate(
perc_uem = uem / lag(uem)
)
View(dados)
dados <- dados |>
dplyr::rename(
gdp = NY.GDP.MKTP.KD.ZG,
uem = SL.UEM.TOTL.ZS
) |>
dplyr::mutate(
perc_uem = (uem / lag(uem)) - 1
)
dados <- dplyr::left_join(gdp, uem, by = c("country", "year"))
dados <- dados |>
dplyr::select(-iso2c.y, -iso3c.y)
dados <- dplyr::left_join(gdp, uem, by = c("country", "year"))
dados <- dados |>
dplyr::rename(
gdp = NY.GDP.MKTP.KD.ZG,
uem = SL.UEM.TOTL.ZS
) |>
dplyr::mutate(
perc_uem = (uem / lag(uem)) - 1
) |>
dplyr::select(-iso2c.y, -iso3c.y)
View(dados)
(7.947/9.231)-1
7634/7947 - 1
(7634/7947) - 1
dados <- dplyr::left_join(gdp, uem, by = c("country", "year"))
dados <- dados |>
dplyr::rename(
gdp = NY.GDP.MKTP.KD.ZG,
uem = SL.UEM.TOTL.ZS
) |>
dplyr::mutate(
perc_uem = (uem / dplyr::lag(uem, n = 1)) - 1
) |>
dplyr::select(-iso2c.y, -iso3c.y)
View(dados)
dados <- dados |>
dplyr::rename(
pib = NY.GDP.MKTP.KD.ZG,
desemp = SL.UEM.TOTL.ZS
) |>
dplyr::mutate(
perc_desemp = (desemp / dplyr::lag(desemp, n = 1)) - 1
) |>
dplyr::select(-iso2c.y, -iso3c.y)
dados <- dplyr::left_join(gdp, uem, by = c("country", "year"))
dados <- dados |>
dplyr::rename(
pib = NY.GDP.MKTP.KD.ZG,
desemp = SL.UEM.TOTL.ZS
) |>
dplyr::mutate(
perc_desemp = (desemp / dplyr::lag(desemp, n = 1)) - 1
) |>
dplyr::select(-iso2c.y, -iso3c.y)
View(dados)
7947/7634 - 1
dados <- dplyr::left_join(gdp, uem, by = c("country", "year"))
dados
dados |>
dplyr::rename(
pib = NY.GDP.MKTP.KD.ZG,
desemp = SL.UEM.TOTL.ZS
)
dados |>
dplyr::rename(
pib = NY.GDP.MKTP.KD.ZG,
desemp = SL.UEM.TOTL.ZS
) |>
dplyr::arrange(year)
dados <- dados |>
dplyr::rename(
pib = NY.GDP.MKTP.KD.ZG,
desemp = SL.UEM.TOTL.ZS
) |>
dplyr::arrange(year) |>
dplyr::mutate(
perc_desemp = (desemp / dplyr::lag(desemp, n = 1)) - 1
) |>
dplyr::select(-iso2c.y, -iso3c.y)
View(dados)
dados <- dplyr::left_join(gdp, uem, by = c("country", "year"))
dados <- dados |>
dplyr::rename(
pib = NY.GDP.MKTP.KD.ZG,
desemp = SL.UEM.TOTL.ZS
) |>
dplyr::arrange(country,year) |>
dplyr::mutate(
perc_desemp = (desemp / dplyr::lag(desemp, n = 1)) - 1
) |>
dplyr::select(-iso2c.y, -iso3c.y)
View(dados)
(7634/7947) - 1
dados <- dados |>
tidyr::drop_na()
summary(dados)
View(dados)
dados |>
dplyr::group_by(country) |>
dplyr::n_groups()
dados |>
dplyr::group_by(country)
dados |>
dplyr::group_by(country) |>
dplyr::count()
5*33
dados
dados <- dplyr::left_join(gdp, uem, by = c("country", "year"))
dados <- dados |>
dplyr::rename(
pib = NY.GDP.MKTP.KD.ZG,
desemp = SL.UEM.TOTL.ZS
) |>
dplyr::arrange(country,year) |>
dplyr::mutate(
perc_desemp = (desemp / dplyr::lag(desemp, n = 1)) - 1
) |>
dplyr::select(-iso2c.y, -iso3c.y) |>
dplyr::as_tibble()
View(dados)
dados
dados <- dados |>
tidyr::drop_na()
summary(dados)
dados |>
dplyr::group_by(country) |>
dplyr::count()
dados
dados <- dplyr::left_join(gdp, uem, by = c("country", "year"))
dados <- dados |>
dplyr::rename(
pib = NY.GDP.MKTP.KD.ZG,
desemp = SL.UEM.TOTL.ZS
) |>
dplyr::arrange(country,year) |>
dplyr::mutate(
perc_desemp = (desemp / dplyr::lag(desemp, n = 1)) - 1
) |>
dplyr::select(-iso2c.x, -iso3c.x,-iso2c.y, -iso3c.y) |>
dplyr::as_tibble()
dados <- dados |>
tidyr::drop_na()
summary(dados)
dados |>
dplyr::group_by(country) |>
dplyr::count()
# Criar dados de exemplo
set.seed(123)
dados <- data.frame(
grupo = rep(c("A", "B", "C"), each = 20),
x = rnorm(60),
y = rep(c(1, 2, 3), each = 20) * rnorm(60, 2, 1) + rnorm(60, 0, 0.5)
)
dados
View(dados)
dados %>%
group_by(grupo)
dados %>%
group_by(grupo) %>%
nest()
dados %>%
group_by(grupo) %>%
nest() %>%
mutate(
modelo = map(data, ~ lm(y ~ x, data = .)),
sumario = map(modelo, tidy)
)
# Realizar a regressão por grupo
resultados <- dados %>%
group_by(grupo) %>%
nest() %>%
mutate(
modelo = map(data, ~ lm(y ~ x, data = .)),
sumario = map(modelo, tidy)
)
# Realizar a regressão por grupo
resultados <- dados %>%
group_by(grupo) %>%
nest() %>%
mutate(
modelo = map(data, ~ lm(y ~ x, data = .)),
sumario = map(modelo, broom::tidy)
)
# Exibir os resultados
print(resultados$sumario)
# Acessar os resultados do grupo "B"
resultados$sumario[[2]]
View(resultados)
View(resultados[[2]][[1]])
View(resultados[[4]][[1]])
# Realizar a regressão por grupo
resultados <- dados %>%
group_by(grupo) %>%
nest() %>%
mutate(
modelo = map(data, ~ lm(y ~ x, data = .)),
sumario = map(modelo, broom::tidy.lm)
)
# Realizar a regressão por grupo
resultados <- dados %>%
group_by(grupo) %>%
nest() %>%
mutate(
modelo = map(data, ~ lm(y ~ x, data = .)),
sumario = map(modelo, broom::augment)
)
View(resultados)
View(resultados[[4]][[1]])
View(resultados[[4]][[2]])
# Realizar a regressão por grupo
resultados <- dados %>%
group_by(grupo) %>%
nest() %>%
mutate(
modelo = map(data, ~ lm(y ~ x, data = .)),
sumario = map(modelo, broom::glance)
)
View(resultados[[4]][[1]])
View(resultados[[2]][[2]])
View(resultados[[4]][[2]])
View(resultados[[4]][[3]])
summary(resultados$modelo[[1]])
# Realizar a regressão por grupo
resultados <- dados %>%
group_by(grupo) %>%
nest() %>%
mutate(
modelo = map(data, ~ lm(y ~ x, data = .)),
sumario = map(modelo, broom::tidy)
)
View(resultados[[4]][[1]])
View(dados)
dados |>
dplyr::group_by(country) |>
dplyr::count()
dados |>
dplyr::group_by(country) |>
dplyr::count()
dados <- dplyr::left_join(gdp, uem, by = c("country", "year"))
dados <- dados |>
dplyr::rename(
pib = NY.GDP.MKTP.KD.ZG,
desemp = SL.UEM.TOTL.ZS
) |>
dplyr::arrange(country,year) |>
dplyr::mutate(
perc_desemp = (desemp / dplyr::lag(desemp, n = 1)) - 1
) |>
dplyr::select(-iso2c.x, -iso3c.x,-iso2c.y, -iso3c.y) |>
dplyr::as_tibble()
dados <- dados |>
tidyr::drop_na()
summary(dados)
dados |>
dplyr::group_by(country) |>
dplyr::count()
dados |>
dplyr::group_by(country) |>
do(model = lm(pib ~ perc_desemp, data = .))
moedlos <- dados |> dplyr::group_by(country) |>
do(model = lm(pib ~ perc_desemp, data = .))
moedlos <- dados |>
dplyr::group_by(country) |>
do(model = lm(pib ~ perc_desemp, data = .))
modelos <- dados |>
dplyr::group_by(country) |>
do(model = lm(pib ~ perc_desemp, data = .))
modelos
modelos[[1]]
modelos[1]
modelos$country[1]
modelos$country[[1]]
modelos$country$mod
modelos$country[[1]]$mod
modelos[modelos$country == "Brazil",]$model
modelos[modelos$country == "Brazil",]$model |> summary()
modelos[modelos$country == "Brazil",]$model %>% summary()
modelos[modelos$country == "Brazil",]$model
summary(modelos[modelos$country == "Brazil",]$model)
modelos[modelos$country == "Brazil",]$model
# Criar dados de exemplo
set.seed(123)
dados1 <- data.frame(
grupo = rep(c("A", "B", "C"), each = 20),
x = rnorm(60),
y = rep(c(1, 2, 3), each = 20) * rnorm(60, 2, 1) + rnorm(60, 0, 0.5)
)
# Realizar a regressão por grupo
resultados <- dados1 %>%
group_by(grupo) %>%
nest() %>%
mutate(
modelo = map(data, ~ lm(y ~ x, data = .)),
sumario = map(modelo, broom::tidy)
)
# Exibir os resultados
print(resultados$sumario)
# Acessar os resultados do grupo "B"
resultados$sumario[[2]]
View(dados)
modelos <- dados |>
dplyr::group_by(country) |>
tidyr::nest() |>
dplyr::mutate(
modelo = map(data, ~ lm(pib ~ perc_desemp, data = .)),
sumario = map(modelo, broom::tidy)
)
print(modelos$sumario)
modelos
View(dados)
View(modelos)
View(modelos[[2]][[1]])
View(modelos[[4]][[1]])
View(modelos[[4]][[5]])
# Exibir os resultados
print(resultados$sumario)
# Acessar os resultados do grupo "B"
resultados$sumario[[2]]
# Acessar os resultados do grupo "B"
resultados$modelo[[2]]
View(modelos)
View(resultados)
View(resultados)
View(resultados[[2]][[1]])
dados
dados |>
dplyr::group_by(country) |>
dplyr::count()
print(modelos$sumario)
dados |>
filter(country == "Brazil")
dados |>
filter(country == "Brazil") |>
lm(pib ~perc_desemp)
dados |>
filter(country == "Brazil") |>
lm(pib ~perc_desemp, data = .)
dados |>
filter(country == "Brazil") %>%
lm(pib ~perc_desemp, data = .)
dados |>
filter(country == "Brazil") %>%
lm(pib ~perc_desemp, data = .) |>
summary()
dados |>
filter(country == "Brazil")
dados |>
filter(country == "Brazil") %>%
lm(pib ~ desemp, data = .) |>
summary()
dados |>
filter(country == "Brazil") %>%
lm(pib ~ perc_desemp, data = .) |>
summary()
2.5862/-13.9729
dados |>
filter(country == "China") %>%
lm(pib ~ perc_desemp, data = .) |>
summary()
dados |>
filter(country == "China") %>%
lm(pib ~ perc_desemp, data = .) |>
summary() |> china_model
dados |>
filter(country == "China") %>%
lm(pib ~ perc_desemp, data = .) -> china_model
summary(china_model)
summary(china_model) -> sum_china
sum_china$coefficients
sum_china$coefficients$Estimate
sum_china$coefficients[1]
sum_china$coefficients[1,2]
sum_china$coefficients[2,2]
sum_china$coefficients[2,1]
sum_china$coefficients[1,1] / sum_china$coefficients[2,1]
dados |>
filter(country == "Brazil") %>%
lm(pib ~ perc_desemp, data = .) -> brazil_model
summary(brazil_model) -> brazil_china
summary(brazil_model) -> sum_brazil
sum_brazil$coefficients[1,1] / sum_brazil$coefficients[2,1]
modelos
View(modelos[[4]][[1]])
View(modelos[[4]][[2]])
View(modelos[[4]][[5]])
sum_brazil
modelos <- dados |>
dplyr::group_by(country) |>
tidyr::nest() |>
dplyr::mutate(
modelo = map(data, ~ lm(pib ~ perc_desemp, data = .)),
sumario = map(modelo, summary)
)
View(modelos[[4]][[1]])
modelos$sumario[[1]]
View(resultados[[4]][[1]])
modelos <- dados |>
dplyr::group_by(country) |>
tidyr::nest() |>
dplyr::mutate(
modelo = map(data, ~ lm(pib ~ perc_desemp, data = .)),
sumario = map(modelo, summary),
estimadores = map(modelo, broom::tidy),
estatisticas = map(modelo, broom::augment)
)
View(modelos[[4]][[1]])
View(modelos[[5]][[1]])
View(modelos[[6]][[1]])
modelos <- dados |>
dplyr::group_by(country) |>
tidyr::nest() |>
dplyr::mutate(
modelo = map(data, ~ lm(pib ~ perc_desemp, data = .)),
sumario = map(modelo, summary),
estimadores = map(modelo, broom::tidy),
glance = map(modelo, broom::glance)
)
View(modelos[[6]][[1]])
View(modelos[[6]][[1]])
1995-1961
library(WDI) # acesso a bases de dados do Banco Mundial
library(tidyverse)
library(broom)
# Pesquisa de bases de dados para o PIB
search_gdp <- WDI::WDIsearch(string = "gdp",
field = "name")
# Pesquisa de bases de dados para o desemprego
search_unemployment <- WDI::WDIsearch(string = "unemployment",
field = "name")
# Recuperando informações do PIB
gdp <- WDI::WDI(indicator = "NY.GDP.MKTP.KD.ZG",
country = c("CHN", "BRA", "IND", "ZAF", "RUS"),
start = 1960,
end = 2025)
# Recuperando informações do desemprego
uem <- WDI::WDI(indicator = "SL.UEM.TOTL.ZS",
country = c("CHN", "BRA", "IND", "ZAF", "RUS"),
start = 1960,
end = 2025)
# Agregando os dados e tratando as informações
dados <- dplyr::left_join(gdp, uem, by = c("country", "year"))
dados <- dados |>
dplyr::rename(
pib = NY.GDP.MKTP.KD.ZG,
desemp = SL.UEM.TOTL.ZS
) |>
dplyr::arrange(country,year) |>
dplyr::mutate(
perc_desemp = (desemp / dplyr::lag(desemp, n = 1)) - 1
) |>
dplyr::select(-iso2c.x, -iso3c.x,-iso2c.y, -iso3c.y) |>
dplyr::as_tibble()
# drop de NAs
dados <- dados |>
tidyr::drop_na()
summary(dados)
# Quantidade de dados restante por país
dados |>
dplyr::group_by(country) |>
dplyr::count()
# equação de Okun
mod_o <- dados |>
dplyr::group_by(country) |>
tidyr::nest() |>
dplyr::mutate(
modelo = map(data, ~ lm(pib ~ perc_desemp, data = .)),
sumario = map(modelo, summary),
estimadores = map(modelo, broom::tidy),
glance = map(modelo, broom::glance)
)
# equação de Thirlwall
mod_t <- dados |>
dplyr::group_by(country) |>
tidyr::nest() |>
dplyr::mutate(
modelo = map(data, ~ lm(pib ~ perc_desemp, data = .)),
sumario = map(modelo, summary),
estimadores = map(modelo, broom::tidy),
glance = map(modelo, broom::glance)
)
View(mod_o)
View(mod_t)
View(mod_t[[5]][[1]])
# equação de Thirlwall
mod_t <- dados |>
dplyr::group_by(country) |>
tidyr::nest() |>
dplyr::mutate(
modelo = map(data, ~ lm(perc_desemp ~ pib, data = .)),
sumario = map(modelo, summary),
estimadores = map(modelo, broom::tidy),
glance = map(modelo, broom::glance)
)
View(mod_t)
View(mod_t[[4]][[1]])
View(mod_t[[5]][[1]])
View(mod_t[[4]][[1]])
mod_t[[4]][[1]]
View(mod_t[[5]][[1]])
View(mod_t[[4]][[1]])
mod_t[[4]][[1]][["call"]]
View(dados)
View(dados)
View(search_unemployment)
